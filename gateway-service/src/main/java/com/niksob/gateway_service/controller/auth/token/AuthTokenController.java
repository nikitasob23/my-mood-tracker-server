package com.niksob.gateway_service.controller.auth.token;

import com.niksob.domain.dto.auth.login.RowLoginInDetailsDto;
import com.niksob.domain.dto.auth.token.AuthTokenDto;
import com.niksob.domain.dto.auth.token.encoded.refresh.RefreshTokenDto;
import com.niksob.gateway_service.controller.BaseControllerErrorHandler;
import com.niksob.gateway_service.path.controller.auth.token.AuthTokenControllerPaths;
import com.niksob.gateway_service.service.auth.token.AuthTokenControllerService;
import com.niksob.logger.object_state.ObjectStateLogger;
import com.niksob.logger.object_state.factory.ObjectStateLoggerFactory;
import lombok.AllArgsConstructor;
import org.springframework.beans.factory.annotation.Qualifier;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.*;
import reactor.core.publisher.Mono;

@RestController
@AllArgsConstructor
@RequestMapping(AuthTokenControllerPaths.BASE_URI)
public class AuthTokenController {
    private final AuthTokenControllerService authTokenControllerService;

    @Qualifier("authTokenControllerErrorHandler")
    private final BaseControllerErrorHandler errorHandler;
    private final ObjectStateLogger log = ObjectStateLoggerFactory.getLogger(AuthTokenController.class);

    @PostMapping
    @ResponseStatus(HttpStatus.CREATED)
    public Mono<AuthTokenDto> generate(@RequestBody RowLoginInDetailsDto rowLoginInDetails) {
        return authTokenControllerService.generate(rowLoginInDetails)
                .doOnNext(token -> log.debug("Auth token was generated", rowLoginInDetails.getUsername()))
                .doOnNext(ignore -> log.debug("Controller returning success status", HttpStatus.CREATED))
                .onErrorResume(throwable -> errorHandler.baseError(
                        "Controller returning failed response", throwable, rowLoginInDetails.getUsername())
                );
    }

    @PostMapping(AuthTokenControllerPaths.REFRESH)
    @ResponseStatus(HttpStatus.CREATED)
    public Mono<AuthTokenDto> generateByRefresh(@RequestBody RefreshTokenDto refreshToken) {
        return authTokenControllerService.generateByRefresh(refreshToken)
                .doOnNext(token -> log.debug("Auth token was generated by refresh token", refreshToken))
                .doOnNext(ignore -> log.debug("Controller returning success status", HttpStatus.CREATED))
                .onErrorResume(throwable -> errorHandler.baseError(
                        "Controller returning failed response during generation by refresh token",
                        throwable, refreshToken
                ));
    }
}
